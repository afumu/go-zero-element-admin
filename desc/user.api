syntax = "v1"

info(
	title: "用户管理"
	desc: "用户管理"
	author: "zouchangfu"
)

import "common.api"

type (
	UserAddReq {
		Username string `json:"username"`
		Password string `json:"password"`
		Realname string `json:"realname,optional"`
		Sex      int    `json:"sex"`
		Avatar   string `json:"avatar,optional"`
	}

	UserEditReq {
		Id       int64  `json:"id"`
		Username string `json:"username,optional"`
		Password string `json:"password,optional"`
		Realname string `json:"realname,optional"`
		Sex      int    `json:"sex,optional"`
		Avatar   string `json:"avatar,optional"`
		Status   int    `json:"status,optional"`
	}

	UserResp {
		Id        int64  `json:"id"`
		Username  string `json:"username"`
		Realname  string `json:"realname"`
		Password  string `json:"password"`
		Salt      string `json:"salt"`
		Sex       int    `json:"sex"`
		Avatar    string `json:"avatar"`
		Status    int    `json:"status"`
		DeletedAt int    `json:"deleted_at"`
		CreatedBy int64  `json:"created_by"`
		CreatedAt int64  `json:"created_at"`
		UpdatedBy int64  `json:"updated_by"`
		UpdatedAt int64  `json:"updated_at"`
	}
	UserListResp {
		UserList []*UserResp `json:"userList"`
	}

	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}

	LoginUserResp {
		Id        int64  `json:"id"`
		Username  string `json:"username"`
		Realname  string `json:"realname"`
		Password  string `json:"password"`
		Salt      string `json:"salt"`
		Sex       int    `json:"sex"`
		Avatar    string `json:"avatar"`
		Status    int    `json:"status"`
		DeletedAt int    `json:"deleted_at"`
		CreatedBy int64  `json:"created_by"`
		CreatedAt int64  `json:"created_at"`
		UpdatedBy int64  `json:"updated_by"`
		UpdatedAt int64  `json:"updated_at"`
		Permissions []string  `json:"permissions"`
	}
)

@server(
	group:user
	jwt: JwtAuth
)

service core {
	@doc "用户列表"
	@handler list
	get /sys/user/list returns (UserResp)
	
	@doc "添加用户"
	@handler add
	post /sys/user/add (UserAddReq)
	
	@doc "根据Id查询用户"
	@handler queryById
	get /sys/user/queryById (FormParamId) returns (UserResp)
	
	@doc "编辑用户"
	@handler edit
	put /sys/user/edit (UserEditReq)
	
	@doc "根据Id删除用户"
	@handler removeById
	delete /sys/user/removeById (FormParamId)
	
	@doc "批量删除用户"
	@handler removeByIds
	delete /sys/user/removeByIds (FormParamIds)

	@doc "查询当前登录用户信息"
	@handler queryLoginUser
	get /sys/user/queryLoginUser returns (LoginUserResp)
}

@server(
	group:user
)
service core {
	@doc "登录"
	@handler login
	post /sys/user/login (LoginReq) returns (LoginResp)
}