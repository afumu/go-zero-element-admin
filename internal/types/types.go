// Code generated by goctl. DO NOT EDIT.
package types

type UserAddReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Realname string `json:"realname,optional"`
	Sex      int    `json:"sex"`
	Avatar   string `json:"avatar,optional"`
}

type UserEditReq struct {
	Id       int64  `json:"id"`
	Username string `json:"username,optional"`
	Password string `json:"password,optional"`
	Realname string `json:"realname,optional"`
	Sex      int    `json:"sex,optional"`
	Avatar   string `json:"avatar,optional"`
	Status   int    `json:"status,optional"`
}

type UserResp struct {
	Id        int64  `json:"id"`
	Username  string `json:"username"`
	Realname  string `json:"realname"`
	Password  string `json:"password"`
	Salt      string `json:"salt"`
	Sex       int    `json:"sex"`
	Avatar    string `json:"avatar"`
	Status    int    `json:"status"`
	DeletedAt int    `json:"deleted_at"`
	CreatedBy int64  `json:"created_by"`
	CreatedAt int64  `json:"created_at"`
	UpdatedBy int64  `json:"updated_by"`
	UpdatedAt int64  `json:"updated_at"`
}

type UserListResp struct {
	UserList []*UserResp `json:"userList"`
}

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type FormParamId struct {
	Id int64 `form:"id"`
}

type FormParamIds struct {
	Ids string `form:"ids"`
}
