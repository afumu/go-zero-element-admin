// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	dict "github.com/zouchangfu/go-zero-element-admin/internal/handler/dict"
	menu "github.com/zouchangfu/go-zero-element-admin/internal/handler/menu"
	permission "github.com/zouchangfu/go-zero-element-admin/internal/handler/permission"
	role "github.com/zouchangfu/go-zero-element-admin/internal/handler/role"
	user "github.com/zouchangfu/go-zero-element-admin/internal/handler/user"
	"github.com/zouchangfu/go-zero-element-admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/sys/user/list",
				Handler: user.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sys/user/add",
				Handler: user.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/user/queryById",
				Handler: user.QueryByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/sys/user/edit",
				Handler: user.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/user/removeById",
				Handler: user.RemoveByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/user/removeByIds",
				Handler: user.RemoveByIdsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/user/queryLoginUser",
				Handler: user.QueryLoginUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/sys/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/sys/role/list",
				Handler: role.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sys/role/add",
				Handler: role.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/role/queryById",
				Handler: role.QueryByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/sys/role/edit",
				Handler: role.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/role/removeById",
				Handler: role.RemoveByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/role/removeByIds",
				Handler: role.RemoveByIdsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/sys/menu/list",
				Handler: menu.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sys/menu/add",
				Handler: menu.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/menu/queryById",
				Handler: menu.QueryByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/sys/menu/edit",
				Handler: menu.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/menu/removeById",
				Handler: menu.RemoveByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/menu/removeByIds",
				Handler: menu.RemoveByIdsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/menu/queryUserMenu",
				Handler: menu.QueryUserMenuHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/sys/permission/list",
				Handler: permission.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sys/permission/add",
				Handler: permission.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/permission/queryById",
				Handler: permission.QueryByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/sys/permission/edit",
				Handler: permission.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/permission/removeById",
				Handler: permission.RemoveByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/permission/removeByIds",
				Handler: permission.RemoveByIdsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/sys/dict/list",
				Handler: dict.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sys/dict/add",
				Handler: dict.AddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sys/dict/queryById",
				Handler: dict.QueryByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/sys/dict/edit",
				Handler: dict.EditHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/dict/removeById",
				Handler: dict.RemoveByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/sys/dict/removeByIds",
				Handler: dict.RemoveByIdsHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)
}
